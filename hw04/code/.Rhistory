x = check_missing(x, na.rm)
list(minimum = get_minimum(x),
percent10 = get_percentile10(x),
quartile1 = get_quartile1(x),
median = get_median(x),
mean = get_average(x),
quartile3 = get_quartile3(x),
percent90 = get_percentile90(x),
maximum = get_maximum(x),
range = get_range(x),
stdev = get_stdev(x),
missing = missing
)
}
print_stats <- function(x) {
str_c(str_pad(names(x), 9, "right"),
":",
" ",
format(round(as.numeric(x), digits = 4), nsmall = 4)
)
}
rescale100 <- function(x, xmin, xmax) {
100 * (x - xmin) / (xmax - xmin)
}
drop_lowest <- function(x) {
x[x != get_minimum(x)]
}
score_homework <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_quiz <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_lab <- function(x) {
if (x == 11 | x == 12) {
100
} else if (x == 10) {
80
} else if (x == 9) {
60
} else if (x == 8) {
40
} else if (x == 7) {
20
} else {
0
}
}
install.packages("ggmap")
install.packages("ggplot2")
install.packages("testthat")
library("testthat")
remove_missing(c(NA, NA, NA, NA, 100))
check_missing(c(4, 5, 6, NA))
check_missing(c(4, 5, 6, NA), TRUE)
check_missing(c('1', '2', '3'))
remove_missing(c('1', '2', '3'))
remove_missing(c('1', '2', '3', NA))
check_missing(c('1', '2', '3', NA))
check_missing(c('1', '2', '3', NA), TRUE)
check_numeric(c(1, 2))
check_numeric(NA)
get_minimum(c(1, 2, NA))
get_minimum(NA)
get_minimum(c(NA, NA))
get_minimum(c(NA, NA, 2))
get_range(c(1, 2, 3, NA))
get_range(c(1, 2, 3, NA), TRUE)
get_range(c(NA, NA), TRUE)
get_range(c(NA, NA))
-123 - -321
-321 + 198
300/4
get_average(c(10, 20, 30, 40))
get_average(c(1, 1, 1, 1, 10))
101/3
200 / 4
400 / 4
304/4
get_average(c(0, 0, 4, 300, NA), TRUE)
get_average(c(1, 1, 1, 1, '10'))
14 / 4
14 / 5
get_stdev(c(1, 2, 3))
get_stdev(c(1, 1, 1, 1, 10)
)
get_stdev(c(1, 1, 1, 1, 10))
get_stdev(c(0, 0, 4, 300, NA), TRUE)
get_stdev(c(1, 1, 1, 1, '10'))
get_stdev(c(2, 4, 6))
get_stdev(c(0, 0, 4, 300, NA))
get_stdev(c(0, 0, 4, 300, NA), TRUE)
get_quartile1(c(2, 4, 6))
get_quartile1(c(1, 1, 1, 1, 10)
)
get_quartile1(c(1, 1, 1, 1, 10))
get_quartile1(c(0, 0, 4, 300, NA), TRUE)
get_quartile3(c(0, 0, 4, 300, NA), TRUE)
get_quantile(c(0, 0, 4, 300, NA))
quantile(c(0, 0, 4, 300, NA))
quantile(c(0, 0, 4, 300))
get_quartile1(c(1, 2, 5, 9, 10))
get_quartile1(c(1, 2, 5, 90, 100))
quantile(c(1, 2, 5, 9, 10))
quantile(c(1, 2, 5, 90, 100))
quantile(c(1, 1, 2, 5, 5, 8, 9, 10))
quantile(c(0, 0, 4, 4, 6, 10, 300))
quantile(c(0, 0, 4, 4, 6, 10, 30))
quantile(c(0, 0, 4, 4, 6, 100, 300))
get_percentile10(c(2, 4, 6))
get_percentile10(c(1, 1, 2, 5, 5, 8, 9, 10))
get_percentile90(c(1, 1, 2, 5, 5, 8, 9, 10))
get_percentile10(c(0, 0, 4, 4, 6, 100, 300, NA), TRUE)
get_percentile90(c(0, 0, 4, 4, 6, 100, 300, NA), TRUE)
get_percentile90(c(2, 4, 6))
get_percentile90(c(2, 4, '6'))
count_missing(c(2, 4, '6', '8', NA))
summary_stats(c(2, 4, 6))
values(summary_stats(c(2, 4, 6)))
naes(summary_stats(c(2, 4, 6)))
names(summary_stats(c(2, 4, 6)))
summary_stats(c(1, 1, 2, 5, 5, 8, 9, 10))
summary_stats(c(0, 0, 4, 4, 6, 100, 300, NA))
summary_stats(c(0, 0, 4, 4, 6, 100, 300, NA), TRUE)
print_stats(c(0, 0, 4, 4, 6, 100, 300, NA), TRUE)
print_stats(c(0, 0, 4, 4, 6, 100, 300))
print_stats <- function(x) {
x = summary_stats(x)
str_c(str_pad(names(x), 9, "right"),
":",
" ",
format(round(as.numeric(x), digits = 4), nsmall = 4)
)
}
print_stats(c(0, 0, 4, 4, 6, 100, 300))
x = print_stats(c(0, 0, 4, 4, 6, 100, 300))
x
a <- c(1, 4, 7, NA, 10)
stats <- summary_stats(a)
stats
stats <- summary_stats(a, TRUE)
stat
stats
print_stats(stats)
stats
print_stats <- function(x) {
str_c(str_pad(names(x), 9, "right"),
":",
" ",
format(round(as.numeric(x), digits = 4), nsmall = 4)
)
}
print_stats(stats)
print(print_stats(stats))
print(1)
print(1, 2)
print(c(1, 2))
print(str_c(str_pad(names(stats), 9, "right"),
":",
" ",
format(round(as.numeric(stats), digits = 4), nsmall = 4)
))
rescale100(c(2, 4, 6))
rescale100(2, 4, 6)
rescale100(c(2, 4, 6), 0, 10)
list(20, 40, 60)
c(20, 40, 60)
rescale100(c(1, 1, 2, 5, 5, 8, 9, 10), 0, 20)
rescale100(c(1, 5, 55, 70, 100, 200, 300), 0, 300)
rescale100(c(1, 5, 55, 70, 100, 200), 0, 200)
rescale100(c(2, 4, 6, 8, NA), 0, 10)
rescale100(c('2', '4', '6', '8', '10'), 0, 10)
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NULL
x
break
}
}
}
drop_lowest(c(1, 1, 2))
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NA
remove_missing(x)
break
}
}
}
drop_lowest(c(1, 1, 2))
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NA
remove_missing(x)
x
break
}
}
}
drop_lowest(c(1, 1, 2))
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NA
x = remove_missing(x)
break
}
}
x
}
drop_lowest(c(1, 1, 2))
drop_lowest(c(2, 1, 2))
drop_lowest(c(2, 1, 0))
drop_lowest(c(2, 1, 2, 0))
drop_lowest(c(2, 1, 0, 2, 0))
lowest
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NA
x = remove_missing(x)
break
}
}
x
}
score_homework <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_quiz <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_lab <- function(x) {
if (x == 11 | x == 12) {
100
} else if (x == 10) {
80
} else if (x == 9) {
60
} else if (x == 8) {
40
} else if (x == 7) {
20
} else {
0
}
}
get_average(c(1, 1, 2, 5, 5, 8, 9, 10))
get_average(c(5, 55, 70, 100, 200))
get_average(c(70, 100, 200))
score_quiz(c(1, 1, 2, 5, 5, 8, 9, 10), TRUE)
score_quiz(c(1, 5, 55, 70, 100, 200))
library(testthat)
source('functions.R')
sink('../output/test-reporter.txt')
test_file('tests.R')
sink()
get_stdev(c(1, 1, 1, 1, 10))
get_stdev(c(1, 1, 1, 1, 5))
get_stdev(c(1, 1, 1, 5))
get_stdev(c(0, 0, 4, 300, NA), TRUE)
get_stdev(c(0, 0, 4, 100, NA), TRUE)
get_stdev(c(0, 4, 100, NA), TRUE)
get_stdev(c(0, 4, 400, NA), TRUE)
get_stdev(c(0, 40, 400, NA), TRUE)
get_stdev(c(0, 40, 100, NA), TRUE)
get_stdev(c(0, 20, 100, NA), TRUE)
get_stdev(c(0, 20, 125, NA), TRUE)
get_stdev(c(15, 20, 125, NA), TRUE)
get_stdev(c(15, 20, 50, NA), TRUE)
get_stdev(c(15, 20, 75, NA), TRUE)
get_stdev(c(15, 20, 100, NA), TRUE)
get_stdev(c(15, 16, 100, NA), TRUE)
get_stdev(c(15, 16, 20, NA), TRUE)
get_stdev(c(15, 16, 27, NA), TRUE)
get_stdev(c(15, 16, 17, NA), TRUE)
get_stdev(c(4, 5, 6, 15, 16, 17, NA), TRUE)
get_stdev(c(4, 5, 6, 8, NA), TRUE)
get_stdev(c(4, 5, 6, 8, 9, 10, NA), TRUE)
get_stdev(c(4, 5, 6, 7, 8, 9, 10, NA), TRUE)
get_stdev(c(4, 5, 6, 9, 10, NA), TRUE)
get_stdev(c(4, 10, NA), TRUE)
get_stdev(c(NA, 1, 1, 1, 8), TRUE)
score_quiz(c(1, 1, 2, 5, 5, 8, 9, 10))
score_quiz(c(5, 5, 8, 9, 10), TRUE)
10 + 9 + 8
27/3
27 + 5
score_quiz(c(1, 5, 55, 70, 100, 200))
score_quiz(c(55, 70, 100, 200))
summary_stats(c(2, 4, 6))
library(testthat)
source('functions.R')
sink('../output/test-reporter.txt')
test_file('tests.R')
sink()
library(testthat)
source('functions.R')
sink('../output/test-reporter.txt')
test_file('tests.R')
sink()
summary_stats(c(0, 0, 4, 4, 6, 100, 300))
summary_stats(c(0, 0, 4, 4, 6, 100))
summary_stats(c(0, 0, 4, 4, 6, 8)
)
summary_stats(c(0, 0, 4, 6, 8))
summary_stats(c(0, 0, 4, 6, 8, 10))
summary_stats(c(1, 1, 1, 8, NA))
summary_stats(c(1, 1, 1, 8, NA), TRUE)
summary_stats(c(1, 1, 2, 5, 5, 8))
summary_stats(c(1, 1, 2, 5, 5, 10))
summary_stats(c(1, 2, 5, 5, 10))
summary_stats(c(1, 2, 5, 10))
summary_stats(c(1, 2, 3, 4, 5, 10))
summary_stats(c(1, 2, 3, 4, 5))
summary_stats(c(1, 5, 10, 15, 20))
summary_stats(c(1, 5, 10, 15, 20))
sd
sd(c(1, 1, 2, 5, 5, 8, 9, 10))
sd(c(1, 5, 10, 15, 20))
summary_stats(c(5, 10, 15, 20))
summary_stats(c(5, 10, 15))
source('functions.R')
sink('../output/test-reporter.txt')
test_file('tests.R')
sink()
library("stringr")
remove_missing <- function(x) {
x[is.na(x) == FALSE]
}
check_missing <- function(x, na.rm = FALSE) {
if (na.rm == TRUE) {
remove_missing(x)
} else {
x
}
}
check_numeric <- function(x) {
if (is.numeric(x) == FALSE) {
stop("non-numeric argument")
}
}
get_minimum <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
x = sort(x)
x[1]
}
get_maximum <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
x = sort(x, decreasing = TRUE)
x[1]
}
get_range <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
get_maximum(x) - get_minimum(x)
}
get_median <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
x = sort(x)
len = length(x)
if (len %% 2 == 0) {
(x[len / 2] + x[(len / 2) + 1]) / 2
} else {
x[(len + 1) / 2]
}
}
get_average <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
total = 0
for (i in 1:length(x)) {
total = total + x[i]
}
total / length(x)
}
get_stdev <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
average = get_average(x)
total = 0
for (i in 1:length(x)) {
total = total + ((x[i] - average) ^ 2)
}
sqrt(total / (length(x) - 1))
}
get_quartile1 <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
quantile(x, names = FALSE)[2]
}
get_quartile3 <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
quantile(x, names = FALSE)[4]
}
get_percentile90 <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
quantile(x, 0.90, names = FALSE)
}
get_percentile10 <- function(x, na.rm = FALSE) {
check_numeric(x)
x = check_missing(x, na.rm)
quantile(x, 0.10, names = FALSE)
}
count_missing <- function(x) {
length(x[is.na(x) == TRUE])
}
summary_stats <- function(x, na.rm = FALSE) {
check_numeric(x)
missing = count_missing(x)
x = check_missing(x, na.rm)
list(minimum = get_minimum(x),
percent10 = get_percentile10(x),
quartile1 = get_quartile1(x),
median = get_median(x),
mean = get_average(x),
quartile3 = get_quartile3(x),
percent90 = get_percentile90(x),
maximum = get_maximum(x),
range = get_range(x),
stdev = get_stdev(x),
missing = missing
)
}
print_stats <- function(x) {
str_c(str_pad(names(x), 9, "right"),
":",
" ",
format(round(as.numeric(x), digits = 4), nsmall = 4)
)
}
rescale100 <- function(x, xmin, xmax) {
100 * (x - xmin) / (xmax - xmin)
}
drop_lowest <- function(x) {
len = length(x)
lowest = get_minimum(x)
for (i in 1:len) {
if (x[i] == lowest) {
x[i] = NA
x = remove_missing(x)
break
}
}
x
}
score_homework <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_quiz <- function(x, drop = FALSE) {
if (drop == TRUE) {
x = drop_lowest(x)
}
get_average(x)
}
score_lab <- function(x) {
if (x == 11 | x == 12) {
100
} else if (x == 10) {
80
} else if (x == 9) {
60
} else if (x == 8) {
40
} else if (x == 7) {
20
} else {
0
}
}
drop_lowest(c(1, 1, 1, 1, 1, 2))
drop_lowest(c(2, 2, 2, 2, 1, 2))
drop_lowest(c(2, 2, 2, 1))
drop_lowest(c(2, 2, 2))
drop_lowest(c(2, 2, -2))
drop_lowest(c(-2, 3, 4))
drop_lowest(c(4, -2, 4))
drop_lowest(c(4, 4, 5, 4, 4, 4, 4))
library(testthat)
